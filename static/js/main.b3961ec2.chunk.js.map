{"version":3,"sources":["utils.tsx","hooks/useGetFiles.tsx","hooks/useFetchData.tsx","store.tsx","components/DayLoader.tsx","components/Spinner.tsx","components/DataLoader.tsx","hooks/useName2Url.tsx","components/Filter.tsx","components/WordCount.tsx","components/Visualization.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["defaultQueryConfig","enabled","retry","refetchOnMount","refetchOnReconnect","refetchOnWindowFocus","cacheTime","fetchData","_key","a","axios","get","data","status","Error","map","download_url","name","split","sort","b","localeCompare","url","console","log","formatData","activeUrls","topk","filters","res","Map","forEach","dayData","undefined","Object","entries","wc","nameData","word","count","indexOf","set","Array","from","slice","useStore","create","activeData","selectedWord","localStorage","getItem","add","assign","addActiveUrl","_activeUrls","concat","rmActiveUrl","filter","o","isActive","setSelectedWord","setTopK","addFilter","_filters","setItem","join","rmFilter","formatDate","date","format","parse","Date","DayLoader","load","className","useQuery","useFetchData","isError","isLoading","isSuccess","refetch","state","addUrl","removeDate","selector","toogle","useCallback","toogleView","then","useEffect","onClick","Spinner","cn","fill","viewBox","cx","cy","r","stroke","strokeWidth","d","DataLoader","n","loadN","error","QueryStatus","String","Success","i","sources","Filter","props","WordCount","width","useMemo","reduce","Math","max","handleSelect","e","ev","stopPropagation","handleRemove","style","Visualization","name2url","length","href","target","rel","replace","queryCache","QueryCache","App","initialIsOpen","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b3961ec2.chunk.js","sourcesContent":["// import { add, format } from \"date-fns\";\nimport { QueryConfig } from \"react-query\";\n\n// export const getFormattedDate = (daysAdd = 0) => {\n//   const date = add(new Date(), { days: daysAdd });\n//   return format(date, \"YMMdd\");\n// };\n\nexport const defaultQueryConfig: QueryConfig<any> = {\n  enabled: false,\n  retry: false,\n  refetchOnMount: false,\n  refetchOnReconnect: false,\n  refetchOnWindowFocus: false,\n  cacheTime: 60000 * 60, // 1h\n};\n","import axios from \"axios\";\nimport { useQuery } from \"react-query\";\nimport { defaultQueryConfig } from \"../utils\";\n\nconst URL =\n  \"https://api.github.com/repos/renato145/peru_news/contents/data/summary?ref=main\";\n\ntype FetchData = { download_url: string; name: string }[];\ntype Props = (_key: string) => Promise<FetchData>;\n\nconst fetchData: Props = async (_key) => {\n  // await new Promise((r) => setTimeout(r, 2000));\n  const { data, status } = await axios.get<FetchData>(URL, {});\n  if (status !== 200) throw new Error(`status: ${status}`);\n  return data.map(({ download_url, name }) => ({\n    download_url,\n    name: name.split(\".json\")[0],\n  })).sort((a,b) => b.name.localeCompare(a.name));\n};\n\nexport const useGetFiles = () =>\n  useQuery<FetchData>(\"files\", fetchData, {\n    ...defaultQueryConfig,\n    enabled: true,\n    retry: true,\n  });\n","import axios from \"axios\";\nimport { useQuery } from \"react-query\";\nimport { FetchData } from \"../store\";\nimport { defaultQueryConfig } from \"../utils\";\n\ntype Props = (_key: string, props: { url: string }) => Promise<FetchData>;\n\nconst fetchData: Props = async (_key, { url }) => {\n  console.log(`fetching summary data ${_key} ${url}`);\n  // await new Promise((r) => setTimeout(r, 2000));\n  const { data, status } = await axios.get<FetchData>(url);\n  if (status !== 200) throw new Error(`status: ${status}`);\n  return data;\n};\n\nexport const useFetchData = (url: string) =>\n  useQuery<FetchData>([\"data\", { url }], fetchData, defaultQueryConfig);\n","import create from \"zustand\";\n\ntype WC = { [word: string]: number };\nexport type FetchData = { [newsName: string]: WC };\nexport type Data = { [url: string]: FetchData };\nexport type SummaryData = [string, [string, number][]][];\n\nconst formatData = (\n  data: Data,\n  activeUrls: string[],\n  topk: number,\n  filters: string[]\n): SummaryData => {\n  const res = new Map<string, Map<string, number>>();\n\n  activeUrls.forEach((url) => {\n    const dayData = data[url];\n    if (dayData !== undefined) {\n      Object.entries(dayData).forEach(([name, wc]) => {\n        const nameData = res.get(name) ?? new Map<string, number>();\n        Object.entries(wc).forEach(([word, count]) => {\n          if (filters.indexOf(word) === -1)\n            nameData.set(word, (nameData.get(word) ?? 0) + count);\n        });\n        res.set(name, nameData);\n      });\n    }\n  });\n\n  return Array.from(res).map(([name, data]) => [\n    name,\n    Array.from(data)\n      .sort((a, b) => b[1] - a[1])\n      .slice(0, topk),\n  ]);\n};\n\nexport type StoreProps = {\n  data: Data;\n  topk: number;\n  activeUrls: string[];\n  activeData: SummaryData;\n  selectedWord: string;\n  filters: string[];\n  add: (data: Data) => void;\n  addActiveUrl: (url: string) => void;\n  rmActiveUrl: (url: string) => void;\n  isActive: (url: string) => boolean;\n  setSelectedWord: (word: string) => void;\n  setTopK: (topk: number) => void;\n  addFilter: (word: string) => void;\n  rmFilter: (word: string) => void;\n};\n\nexport const useStore = create<StoreProps>((set, get) => ({\n  data: {},\n  topk: 0,\n  activeUrls: [],\n  activeData: [],\n  selectedWord: \"\",\n  filters: localStorage.getItem('filters')?.split(',') ?? [],\n  add: (wc) => {\n    set(({ data }) => ({ data: Object.assign(data, wc) }));\n  },\n  addActiveUrl: (url) => {\n    set(({ data, activeUrls, topk, filters }) => {\n      if (activeUrls.indexOf(url) > -1) return {};\n      else {\n        const _activeUrls = activeUrls.concat(url);\n        if (topk === 0) return { activeUrls: _activeUrls };\n        const _activeData = formatData(data, _activeUrls, topk, filters);\n        return { activeUrls: _activeUrls, activeData: _activeData };\n      }\n    });\n  },\n  rmActiveUrl: (url) => {\n    set(({ data, activeUrls, topk, filters }) => {\n      if (activeUrls.indexOf(url) > -1) {\n        const _activeUrls = activeUrls.filter((o) => o !== url);\n        if (topk === 0) return { activeUrls: _activeUrls };\n        const _activeData = formatData(data, _activeUrls, topk, filters);\n        return { activeUrls: _activeUrls, activeData: _activeData };\n      } else return {};\n    });\n  },\n  isActive: (url) => get().activeUrls.indexOf(url) > -1,\n  setSelectedWord: (word) => set({ selectedWord: word }),\n  setTopK: (topk) => {\n    set(() => ({ topk }));\n  },\n  addFilter: (word) => {\n    set(({ data, activeUrls, topk, filters }) => {\n      if (filters.indexOf(word) > -1) return {};\n      else {\n        const _filters = filters.concat(word);\n        localStorage.setItem('filters', _filters.join());\n        const _activeData = formatData(data, activeUrls, topk, _filters);\n        return { activeData: _activeData, filters: _filters };\n      }\n    });\n  },\n  rmFilter: (word) => {\n    set(( {data, activeUrls, topk, filters} ) => {\n      if (filters.indexOf(word) > -1) {\n        const _filters = filters.filter((o) => o !== word);\n        localStorage.setItem('filters', _filters.join());\n        const _activeData = formatData(data, activeUrls, topk, _filters);\n        return { activeData: _activeData, filters: _filters };\n      }else return {};\n    });\n  },\n}));\n","import { parse, format } from \"date-fns\";\nimport React, { useCallback, useEffect } from \"react\";\nimport { useFetchData } from \"../hooks/useFetchData\";\nimport { StoreProps, useStore } from \"../store\";\n\ninterface Props {\n  date: string;\n  url: string;\n  load: boolean;\n  className?: string;\n}\n\nconst selector = (url: string) => (state: StoreProps) => ({\n  add: state.add,\n  addUrl: () => state.addActiveUrl(url),\n  removeDate: () => state.rmActiveUrl(url),\n  isActive: state.isActive(url),\n});\n\nconst formatDate = (date: string) =>\n  format(parse(date, \"yyyyMMdd\", new Date()), \"dd/MM/Y\");\n\nexport const DayLoader: React.FC<Props> = ({\n  date,\n  url,\n  load,\n  className = \"\",\n}) => {\n  const { isError, isLoading, isSuccess, refetch } = useFetchData(url);\n  const { add, addUrl, removeDate, isActive } = useStore(selector(url));\n\n  const toogle = useCallback(() => {\n    if (isActive || isError) removeDate();\n    else if (isSuccess) addUrl();\n  }, [isActive, isError, removeDate, isSuccess, addUrl]);\n\n  const toogleView = useCallback(() => {\n    if (isSuccess) toogle();\n    else if (isLoading) return;\n    else \n      refetch().then((data) => {\n        if (data) {\n          add({ [url]: data });\n          addUrl();\n        }\n      });\n  }, [add, addUrl, isLoading, isSuccess, refetch, toogle, url]);\n\n  useEffect(() => {\n    if (load) toogleView();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [load]);\n\n  return isError ? null : (\n    <div\n      className={`${className} p-2 transition cursor-pointer ${\n        isActive ? \"bg-green-600 text-gray-50\" : \"bg-gray-300\"\n      } ${isLoading ? \"animate-pulse\" : \"\"}`}\n      onClick={() => toogleView()}\n    >\n      <p className=\"font-semibold pointer-events-none\">{formatDate(date)}</p>\n    </div>\n  );\n};\n","import React from \"react\";\n\ninterface Props {\n  className?: string;\n}\n\nexport const Spinner: React.FC<Props> = ({ className }) => {\n  const cn = className ?? \"h-5 w-5\";\n\n  return (\n    <svg className={`animate-spin mr-3 ${cn}`} fill=\"none\" viewBox=\"0 0 24 24\">\n      <circle\n        className=\"opacity-25\"\n        cx=\"12\"\n        cy=\"12\"\n        r=\"10\"\n        stroke=\"currentColor\"\n        strokeWidth=\"4\"\n      ></circle>\n      <path\n        className=\"opacity-75\"\n        fill=\"currentColor\"\n        d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n      ></path>\n    </svg>\n  );\n};\n","import React from \"react\";\nimport { QueryStatus } from \"react-query\";\nimport { useGetFiles } from \"../hooks/useGetFiles\";\nimport { DayLoader } from \"./DayLoader\";\nimport { Spinner } from \"./Spinner\";\n\ninterface Props {\n  n: number;\n  loadN: number;\n}\n\nexport const DataLoader: React.FC<Props> = ({ n, loadN }) => {\n  const { data, error, status } = useGetFiles();\n\n  return (\n    <div className=\"-mt-2 -ml-2 flex flex-wrap\">\n      {status === QueryStatus.Error ? (\n        <p>\n          Couldn't load files: <span>{String(error)}</span>\n        </p>\n      ) : status === QueryStatus.Success && data ? (\n        data.slice(0, n).map(({download_url, name}, i) => (\n          <DayLoader key={i} className=\"mt-2 ml-2\" date={name} url={download_url} load={i < loadN} />\n        ))\n      ) : (\n        <div className=\"w-full flex justify-center\">\n          <Spinner className=\"h-10 w-10\" />\n        </div>\n      )}\n    </div>\n  );\n};\n","import axios from \"axios\";\nimport { useQuery } from \"react-query\";\nimport { defaultQueryConfig } from \"../utils\";\n\nconst URL =\n  \"https://raw.githubusercontent.com/renato145/peru_news/main/settings.json\";\n\ntype FetchData = { sources: { name: string; url: string }[] };\ntype Name2Url = Map<string, string>;\ntype Props = (_key: string) => Promise<Name2Url>;\n\nconst fetchData: Props = async (_key) => {\n  // await new Promise((r) => setTimeout(r, 2000));\n  const { data, status } = await axios.get<FetchData>(URL, {});\n  if (status !== 200) throw new Error(`status: ${status}`);\n  const res: Name2Url = new Map();\n  data.sources.forEach(({name, url}) => res.set(name, url));\n  return res;\n};\n\nexport const useName2Url = () =>\n  useQuery<Name2Url>(\"name2url\", fetchData, {\n    ...defaultQueryConfig,\n    enabled: true,\n    retry: true,\n  });\n","import React, { HTMLProps } from \"react\";\nimport { StoreProps, useStore } from \"../store\";\n\ninterface Props extends HTMLProps<HTMLDivElement> {\n  className?: string;\n  word: string;\n}\n\nconst selector = ({ rmFilter }: StoreProps) => ({ rmFilter });\n\nexport const Filter: React.FC<Props> = ({ word, className = \"\", ...props }) => {\n  const { rmFilter } = useStore(selector);\n\n  const handleClick = () => {\n    rmFilter(word);\n  };\n\n  return (\n    <div\n      className={`px-2 rounded-md bg-red-400 hover:bg-red-600 text-sm text-white font-medium transition-colors cursor-pointer ${className}`}\n      onClick={handleClick}\n      {...props}\n    >\n      {word}\n    </div>\n  );\n};\n","import React, { useMemo } from \"react\";\nimport { StoreProps, useStore } from \"../store\";\n\ninterface Props {\n  data: [string, number][];\n}\n\nconst selector = ({ selectedWord, setSelectedWord, addFilter }: StoreProps) => ({\n  selectedWord,\n  setSelectedWord,\n  addFilter,\n});\n\nexport const WordCount: React.FC<Props> = ({ data }) => {\n  const { selectedWord, setSelectedWord, addFilter } = useStore(selector);\n  const width = useMemo(\n    () => data.map(([_, count]) => count).reduce((a, b) => Math.max(a, b)),\n    [data]\n  );\n\n  const handleSelect = (word: string) => {\n    if (selectedWord !== word) setSelectedWord(word);\n    else setSelectedWord(\"\");\n  };\n\n  const handleRemove = (ev: React.MouseEvent<HTMLParagraphElement, MouseEvent>, word: string) => {\n    ev.stopPropagation();\n    if (selectedWord === word) setSelectedWord(\"\");\n    addFilter(word);\n  };\n\n  return (\n    <div className=\"flex flex-col space-y-1\">\n      {data.map(([word, count], i) => (\n        <div\n          key={i}\n          className=\"group relative flex items-center h-8\"\n          onClick={() => handleSelect(word)}\n        >\n          <div className=\"absolute flex w-full justify-between pl-2\">\n            <p\n              className={`pointer-events-none ${\n                selectedWord === word ? \"font-semibold\" : \"\"\n              }`}\n            >\n              {word} ({count})\n            </p>\n            <p\n              className=\"mr-2 font-bold text-xs cursor-pointer text-gray-400 hover:text-gray-900\"\n              onClick={(e) => handleRemove(e,word)}\n            >\n              X\n            </p>\n          </div>\n          <div\n            className={`h-full transition-all duration-300 cursor-pointer group-hover:bg-blue-300 ${\n              selectedWord === word ? \"bg-blue-400\" : \"bg-blue-200\"\n            }`}\n            style={{ width: `${(100 * count) / width}%` }}\n          />\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { useName2Url } from \"../hooks/useName2Url\";\nimport { StoreProps, useStore } from \"../store\";\nimport { Filter } from \"./Filter\";\nimport { Spinner } from \"./Spinner\";\nimport { WordCount } from \"./WordCount\";\n\nconst selector = ({ activeData, activeUrls, setTopK, filters, addFilter }: StoreProps) => ({\n  activeData,\n  activeUrls,\n  setTopK,\n  filters,\n});\ninterface Props {\n  topk: number;\n}\n\nexport const Visualization: React.FC<Props> = ({ topk }) => {\n  const { activeData, activeUrls, setTopK, filters } = useStore(selector);\n  const { data: name2url } = useName2Url();\n\n  useEffect(() => {\n    setTopK(topk);\n  }, [setTopK, topk]);\n\n  return (\n    <div className=\"mt-2\">\n      {activeData.length === 0 ? (\n        <div className=\"mt-10 flex justify-center\">\n          <Spinner className=\"h-14 w-14\" />\n        </div>\n      ) : (\n        <>\n          <p className=\"font-semibold\">Loaded data: {activeUrls.length}</p>\n          <div className=\"flex flex-wrap -ml-1\">\n            {filters.map((word, i) => <Filter key={i} className=\"ml-1 mt-0.5\" word={word} />)}\n          </div>\n          <div className=\"mt-4 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 2xl:grid-cols-6 gap-4\">\n            {activeData.map(([name, wc], i) => (\n              <div key={i} className=\"px-4 py-2 bg-blue-50\">\n                <a\n                  className=\"capitalize text-lg font-semibold\"\n                  href={name2url?.get(name)}\n                  target=\"_black\"\n                  rel=\"noopener\"\n                >\n                  {name.replace(\"_\", \" \")}\n                </a>\n                <div className=\"my-2\">\n                  <WordCount data={wc} />\n                </div>\n              </div>\n            ))}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { QueryCache, ReactQueryCacheProvider } from \"react-query\";\nimport { ReactQueryDevtools } from \"react-query-devtools\";\nimport { DataLoader } from \"./components/DataLoader\";\nimport { Visualization } from \"./components/Visualization\";\n\nconst queryCache = new QueryCache();\n\nexport const App: React.FC = () => {\n  return (\n    <ReactQueryCacheProvider queryCache={queryCache}>\n      <div className=\"m-4\">\n        <DataLoader n={10} loadN={5} />\n        <Visualization topk={10} />\n      </div>\n      <ReactQueryDevtools initialIsOpen />\n    </ReactQueryCacheProvider>\n  );\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}