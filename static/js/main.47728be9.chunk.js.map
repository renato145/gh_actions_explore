{"version":3,"sources":["hooks/useGetFiles.tsx","hooks/useFetchData.tsx","store.tsx","utils.tsx","components/DayLoader.tsx","components/Spinner.tsx","components/DataLoader.tsx","hooks/useName2Url.tsx","components/Filter.tsx","components/LineChart.tsx","components/WordCount.tsx","components/Newspaper.tsx","components/Visualization.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["fetchData","a","axios","get","data","status","Error","map","download_url","name","split","sort","b","localeCompare","url","console","log","formatData","activeDates","topk","filters","res","Map","forEach","date","dayData","undefined","Object","entries","wc","nameData","word","count","indexOf","set","Array","from","slice","getWordData","dates","wordData","filter","has","push","useStore","create","activeData","selectedWord","localStorage","getItem","add","assign","addActiveDate","_activeDates","concat","rmActiveDate","o","isActiveDate","setSelectedWord","setTopK","addFilter","_filters","setItem","join","rmFilter","getTimelineData","formatDateStr","parse","Date","formatDate","fmt","format","DayLoader","load","className","useQuery","enabled","retry","useFetchData","isError","isLoading","isSuccess","refetch","state","addDate","removeDate","isActive","selector","toogle","useCallback","toogleView","then","useEffect","onClick","Spinner","cn","fill","viewBox","cx","cy","r","stroke","strokeWidth","d","DataLoader","n","loadN","error","String","i","sources","Filter","props","margins","LineChart","xScale","useMeasure","polyfill","ResizeObserver","ref","width","height","useMemo","yDomain","max","yScale","scaleLinear","domain","range","timeScale","values","path","line","axisLeft","_axisLeft","ticks","tickFormat","tickSize","tickSizeOuter","xAxisRef","node","select","call","transform","x","y","Math","round","invert","WordCount","length","reduce","handleSelect","e","ev","stopPropagation","handleRemove","style","Newspaper","name2url","href","target","rel","replace","Visualization","extent","scaleTime","nameA","nameB","queryClient","QueryClient","defaultOptions","queries","refetchOnMount","refetchOnReconnect","refetchOnWindowFocus","cacheTime","App","QueryClientProvider","client","initialIsOpen","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.47728be9.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { useQuery } from \"react-query\";\n\nconst URL =\n  \"https://api.github.com/repos/renato145/peru_news/contents/data/summary?ref=main\";\n\ntype FetchData = { download_url: string; name: string }[];\ntype Props = () => Promise<FetchData>;\n\nconst fetchData: Props = async () => {\n  // await new Promise((r) => setTimeout(r, 2000));\n  const { data, status } = await axios.get<FetchData>(URL, {});\n  if (status !== 200) throw new Error(`status: ${status}`);\n  return data\n    .map(({ download_url, name }) => ({\n      download_url,\n      name: name.split(\".json\")[0],\n    }))\n    .sort((a, b) => b.name.localeCompare(a.name));\n};\n\nexport const useGetFiles = () =>\n  useQuery<FetchData>(\"files\", () => fetchData());\n","import axios from \"axios\";\nimport { useQuery } from \"react-query\";\nimport { FetchData } from \"../store\";\n\ntype Props = (url: string) => Promise<FetchData>;\n\nconst fetchData: Props = async (url) => {\n  console.log(`fetching summary data from ${url}`);\n  // await new Promise((r) => setTimeout(r, 2000));\n  const { data, status } = await axios.get<FetchData>(url);\n  if (status !== 200) throw new Error(`status: ${status}`);\n  return data;\n};\n\nexport const useFetchData = (url: string) =>\n  useQuery<FetchData>([\"data\", { url }], () => fetchData(url), {\n    enabled: false,\n    retry: false,\n  });\n","import create from \"zustand\";\n\ntype WC = { [word: string]: number };\nexport type FetchData = { [newsName: string]: WC };\nexport type Data = { [date: string]: FetchData };\nexport type SummaryData = [name: string, wc: [word: string, count: number][]][];\nexport type WordData = [date: string, count: number][];\n\nconst formatData = (\n  data: Data,\n  activeDates: string[],\n  topk: number,\n  filters: string[]\n): SummaryData => {\n  const res = new Map<string, Map<string, number>>();\n\n  activeDates.forEach((date) => {\n    const dayData = data[date];\n    if (dayData !== undefined) {\n      Object.entries(dayData).forEach(([name, wc]) => {\n        const nameData = res.get(name) ?? new Map<string, number>();\n        Object.entries(wc).forEach(([word, count]) => {\n          if (filters.indexOf(word) === -1)\n            nameData.set(word, (nameData.get(word) ?? 0) + count);\n        });\n        res.set(name, nameData);\n      });\n    }\n  });\n\n  return Array.from(res).map(([name, data]) => [\n    name,\n    Array.from(data)\n      .sort((a, b) => b[1] - a[1])\n      .slice(0, topk),\n  ]);\n};\n\nconst getWordData = (data: Data, word: string, dates: string[]) => {\n  const wordData = new Map<string, WordData>();\n  if (word !== \"\") {\n    Object.entries(data)\n      .filter(([date]) => dates.indexOf(date) > -1)\n      .forEach(([date, dayData]) => {\n        Object.entries(dayData).forEach(([name, wc]) => {\n          if (!wordData.has(name)) wordData.set(name, []);\n          wordData.get(name)?.push([date, wc[word] ?? 0]);\n        });\n      });\n  }\n  return wordData;\n};\n\nexport type StoreProps = {\n  data: Data;\n  topk: number;\n  activeDates: string[];\n  activeData: SummaryData;\n  selectedWord: string;\n  filters: string[];\n  wordData: Map<string, WordData> | null;\n  add: (data: Data) => void;\n  addActiveDate: (date: string) => void;\n  rmActiveDate: (date: string) => void;\n  isActiveDate: (date: string) => boolean;\n  setSelectedWord: (word: string) => void;\n  setTopK: (topk: number) => void;\n  addFilter: (word: string) => void;\n  rmFilter: (word: string) => void;\n  getTimelineData: (name: string) => WordData | undefined;\n};\n\nexport const useStore = create<StoreProps>((set, get) => ({\n  data: {},\n  topk: 0, // top words to show\n  activeDates: [],\n  activeData: [],\n  selectedWord: \"\", // selected word to show timeline chart\n  wordData: null, // data for the timeline chart\n  filters: localStorage.getItem(\"filters\")?.split(\",\") ?? [], // words to ignore\n  add: (wc) => {\n    set(({ data }) => ({ data: Object.assign(data, wc) }));\n  },\n  addActiveDate: (date) => {\n    set(({ data, activeDates, topk, filters, selectedWord }) => {\n      if (activeDates.indexOf(date) > -1) return {};\n      else {\n        const _activeDates = activeDates.concat(date);\n        if (topk === 0) return { activeDates: _activeDates };\n        const _activeData = formatData(data, _activeDates, topk, filters);\n        const wordData = getWordData(data, selectedWord, _activeDates);\n        return { activeDates: _activeDates, activeData: _activeData, wordData };\n      }\n    });\n  },\n  rmActiveDate: (date) => {\n    set(({ data, activeDates, topk, filters, selectedWord }) => {\n      if (activeDates.indexOf(date) > -1) {\n        const _activeDates = activeDates.filter((o) => o !== date);\n        if (topk === 0) return { activeDates: _activeDates };\n        const _activeData = formatData(data, _activeDates, topk, filters);\n        const wordData = getWordData(data, selectedWord, _activeDates);\n        return { activeDates: _activeDates, activeData: _activeData, wordData };\n      } else return {};\n    });\n  },\n  isActiveDate: (date) => get().activeDates.indexOf(date) > -1,\n  setSelectedWord: (word) => {\n    set(({ data, activeDates }) => {\n      const wordData = getWordData(data, word, activeDates);\n      return { selectedWord: word, wordData };\n    });\n  },\n  setTopK: (topk) => {\n    set(() => ({ topk }));\n  },\n  addFilter: (word) => {\n    set(({ data, activeDates, topk, filters }) => {\n      if (filters.indexOf(word) > -1) return {};\n      else {\n        const _filters = filters.concat(word);\n        localStorage.setItem(\"filters\", _filters.join());\n        const _activeData = formatData(data, activeDates, topk, _filters);\n        return { activeData: _activeData, filters: _filters };\n      }\n    });\n  },\n  rmFilter: (word) => {\n    set(({ data, activeDates, topk, filters }) => {\n      if (filters.indexOf(word) > -1) {\n        const _filters = filters.filter((o) => o !== word);\n        localStorage.setItem(\"filters\", _filters.join());\n        const _activeData = formatData(data, activeDates, topk, _filters);\n        return { activeData: _activeData, filters: _filters };\n      } else return {};\n    });\n  },\n  getTimelineData: (name) => get().wordData?.get(name),\n}));\n","import { format, parse } from \"date-fns\";\n\nexport const formatDateStr = (date: string) =>\n  parse(date, \"yyyyMMdd\", new Date());\n\nexport const formatDate = (date: Date, fmt: string = \"dd/MM/Y\") =>\n  format(date, fmt);\n","import { format } from \"date-fns\";\nimport React, { useCallback, useEffect } from \"react\";\nimport { useFetchData } from \"../hooks/useFetchData\";\nimport { StoreProps, useStore } from \"../store\";\nimport { formatDateStr } from \"../utils\";\n\ninterface Props {\n  date: string;\n  url: string;\n  load: boolean;\n  className?: string;\n}\n\nconst selector = (date: string) => (state: StoreProps) => ({\n  add: state.add,\n  addDate: () => state.addActiveDate(date),\n  removeDate: () => state.rmActiveDate(date),\n  isActive: state.isActiveDate(date),\n});\n\nconst formatDate = (date: string) => format(formatDateStr(date), \"dd/MM/Y\");\n\nexport const DayLoader: React.FC<Props> = ({\n  date,\n  url,\n  load,\n  className = \"\",\n}) => {\n  const { isError, isLoading, isSuccess, refetch } = useFetchData(url);\n  const { add, addDate, removeDate, isActive } = useStore(selector(date));\n\n  const toogle = useCallback(() => {\n    if (isActive || isError) removeDate();\n    else if (isSuccess) addDate();\n  }, [isActive, isError, removeDate, isSuccess, addDate]);\n\n  const toogleView = useCallback(() => {\n    if (isSuccess) toogle();\n    else if (isLoading) return;\n    else\n      refetch().then(({ data }) => {\n        if (data) {\n          add({ [date]: data });\n          addDate();\n        }\n      });\n  }, [add, addDate, isLoading, isSuccess, refetch, toogle, date]);\n\n  useEffect(() => {\n    if (load) toogleView();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [load]);\n\n  return isError ? null : (\n    <div\n      className={`${className} p-2 transition cursor-pointer ${\n        isActive ? \"bg-green-600 text-gray-50\" : \"bg-gray-300\"\n      } ${isLoading ? \"animate-pulse\" : \"\"}`}\n      onClick={toogleView}\n    >\n      <p className=\"font-semibold pointer-events-none\">{formatDate(date)}</p>\n    </div>\n  );\n};\n","import React from \"react\";\n\ninterface Props {\n  className?: string;\n}\n\nexport const Spinner: React.FC<Props> = ({ className }) => {\n  const cn = className ?? \"h-5 w-5\";\n\n  return (\n    <svg className={`animate-spin mr-3 ${cn}`} fill=\"none\" viewBox=\"0 0 24 24\">\n      <circle\n        className=\"opacity-25\"\n        cx=\"12\"\n        cy=\"12\"\n        r=\"10\"\n        stroke=\"currentColor\"\n        strokeWidth=\"4\"\n      ></circle>\n      <path\n        className=\"opacity-75\"\n        fill=\"currentColor\"\n        d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n      ></path>\n    </svg>\n  );\n};\n","import React from \"react\";\nimport { useGetFiles } from \"../hooks/useGetFiles\";\nimport { DayLoader } from \"./DayLoader\";\nimport { Spinner } from \"./Spinner\";\n\ninterface Props {\n  n: number;\n  loadN: number;\n}\n\nexport const DataLoader: React.FC<Props> = ({ n, loadN }) => {\n  const { data, error, status } = useGetFiles();\n\n  return (\n    <div className=\"-mt-2 -ml-2 flex flex-wrap\">\n      {status === \"error\" ? (\n        <p>\n          Couldn't load files: <span>{String(error)}</span>\n        </p>\n      ) : status === \"success\" && data ? (\n        data.slice(0, n).map(({download_url, name}, i) => (\n          <DayLoader key={i} className=\"mt-2 ml-2\" date={name} url={download_url} load={i < loadN} />\n        ))\n      ) : (\n        <div className=\"w-full flex justify-center\">\n          <Spinner className=\"h-10 w-10\" />\n        </div>\n      )}\n    </div>\n  );\n};\n","import axios from \"axios\";\nimport { useQuery } from \"react-query\";\n\nconst URL =\n  \"https://raw.githubusercontent.com/renato145/peru_news/main/settings.json\";\n\ntype FetchData = { sources: { name: string; url: string }[] };\nexport type Name2Url = Map<string, string>;\ntype Props = () => Promise<Name2Url>;\n\nconst fetchData: Props = async () => {\n  // await new Promise((r) => setTimeout(r, 2000));\n  const { data, status } = await axios.get<FetchData>(URL, {});\n  if (status !== 200) throw new Error(`status: ${status}`);\n  const res: Name2Url = new Map();\n  data.sources.forEach(({ name, url }) => res.set(name, url));\n  return res;\n};\n\nexport const useName2Url = () =>\n  useQuery<Name2Url>(\"name2url\", () => fetchData());\n","import React, { HTMLProps } from \"react\";\nimport { StoreProps, useStore } from \"../store\";\n\ninterface Props extends HTMLProps<HTMLDivElement> {\n  className?: string;\n  word: string;\n}\n\nconst selector = ({ rmFilter }: StoreProps) => ({ rmFilter });\n\nexport const Filter: React.FC<Props> = ({ word, className = \"\", ...props }) => {\n  const { rmFilter } = useStore(selector);\n\n  const handleClick = () => {\n    rmFilter(word);\n  };\n\n  return (\n    <div\n      className={`px-2 rounded-md bg-red-400 hover:bg-red-600 text-sm text-white font-medium transition-colors cursor-pointer ${className}`}\n      onClick={handleClick}\n      {...props}\n    >\n      {word}\n    </div>\n  );\n};\n","import React, { useCallback, useMemo } from \"react\";\nimport { ResizeObserver } from \"@juggle/resize-observer\";\nimport useMeasure from \"react-use-measure\";\nimport { WordData } from \"../store\";\nimport {\n  line,\n  scaleLinear,\n  ScaleTime,\n  max,\n  axisLeft as _axisLeft,\n  select,\n} from \"d3\";\nimport { formatDate, formatDateStr } from \"../utils\";\n\ninterface Props {\n  data: WordData;\n  xScale: ScaleTime<number, number>;\n}\n\nconst margins = {\n  left: 20,\n  right: 10,\n  top: 10,\n  bottom: 10,\n};\n\nexport const LineChart: React.FC<Props> = ({ data, xScale }) => {\n  const [ref, { width }] = useMeasure({ polyfill: ResizeObserver });\n  const height = width / 3;\n  const { values, path, timeScale, yScale, axisLeft } = useMemo(() => {\n    const yDomain = [0, max(data.map((d) => d[1])) ?? 0];\n    const yScale = scaleLinear()\n      .domain(yDomain)\n      .range([height - margins.bottom, margins.top]);\n    const timeScale = xScale.range([margins.left + 3, width - margins.right]);\n    const values: [number, number][] = data.map(([date, count]) => [\n      timeScale(formatDateStr(date)),\n      yScale(count),\n    ]);\n    const path = line()(values);\n    const axisLeft = _axisLeft(yScale)\n      .ticks(2)\n      .tickFormat((o) => (+o % 1 === 0 ? \"\" + o : \"\"))\n      .tickSize(-width + margins.left - margins.right)\n      .tickSizeOuter(0);\n    return { values, path, timeScale, yScale, axisLeft };\n  }, [xScale, width, height, data]);\n\n  const xAxisRef = useCallback(\n    (node) => {\n      select(node).call(axisLeft);\n    },\n    [axisLeft]\n  );\n\n  return (\n    <svg ref={ref} className=\"w-full my-1 bg-white rounded\" height={width / 3}>\n      {path && values ? (\n        <>\n          <g\n            ref={xAxisRef}\n            transform={`translate(${margins.left},0)`}\n            className=\"leftAxis\"\n          />\n          <path\n            fill=\"none\"\n            className=\"stroke-current text-blue-700 stroke-2 transition-all\"\n            d={path}\n          />\n          {values.map(([x, y], i) => (\n            <circle\n              key={i}\n              cx={x}\n              cy={y}\n              className=\"scatter hover:scatter-lg fill-current text-blue-700 hover:text-blue-400 transition-all\"\n            >\n              <title>\n                {`${Math.round(yScale.invert(y))} (${formatDate(\n                  timeScale.invert(x),\n                  \"dd MMM\"\n                )})`}\n              </title>\n            </circle>\n          ))}\n        </>\n      ) : null}\n    </svg>\n  );\n};\n","import React, { useMemo } from \"react\";\nimport { StoreProps, useStore } from \"../store\";\n\ninterface Props {\n  data: [string, number][];\n}\n\nconst selector = ({\n  selectedWord,\n  setSelectedWord,\n  addFilter,\n}: StoreProps) => ({\n  selectedWord,\n  setSelectedWord,\n  addFilter,\n});\n\nexport const WordCount: React.FC<Props> = ({ data }) => {\n  const { selectedWord, setSelectedWord, addFilter } = useStore(selector);\n  const width = useMemo(() => data.length === 0\n    ? 0\n    : data.map(([_, count]) => count).reduce((a, b) => Math.max(a, b)), [data]);\n\n  const handleSelect = (word: string) => {\n    if (selectedWord !== word) setSelectedWord(word);\n    else setSelectedWord(\"\");\n  };\n\n  const handleRemove = (\n    ev: React.MouseEvent<HTMLParagraphElement, MouseEvent>,\n    word: string\n  ) => {\n    ev.stopPropagation();\n    if (selectedWord === word) setSelectedWord(\"\");\n    addFilter(word);\n  };\n\n  return (\n    <div className=\"flex flex-col space-y-1\">\n      {data.map(([word, count], i) => (\n        <div\n          key={i}\n          className=\"group relative flex items-center h-8\"\n          onClick={() => handleSelect(word)}\n        >\n          <div className=\"absolute flex w-full justify-between pl-2\">\n            <p\n              className={`pointer-events-none ${\n                selectedWord === word ? \"font-semibold\" : \"\"\n              }`}\n            >\n              {word} ({count})\n            </p>\n            <p\n              className=\"mr-2 font-bold text-xs cursor-pointer text-gray-400 hover:text-gray-900\"\n              onClick={(e) => handleRemove(e, word)}\n            >\n              X\n            </p>\n          </div>\n          <div\n            className={`h-full transition-all duration-300 cursor-pointer group-hover:bg-blue-300 ${\n              selectedWord === word ? \"bg-blue-400\" : \"bg-blue-200\"\n            }`}\n            style={{ width: `${(100 * count) / width}%` }}\n          />\n        </div>\n      ))}\n    </div>\n  );\n};\n","import { ScaleTime } from \"d3\";\nimport React, { HTMLProps } from \"react\";\nimport { Name2Url } from \"../hooks/useName2Url\";\nimport { StoreProps, useStore } from \"../store\";\nimport { LineChart } from \"./LineChart\";\nimport { WordCount } from \"./WordCount\";\n\ninterface Props extends HTMLProps<HTMLDivElement> {\n  name2url?: Name2Url;\n  name: string;\n  wc: [string, number][];\n  xScale: ScaleTime<number, number> | null;\n}\n\n// const selector = ({ selectedWord, getTimelineData }: StoreProps) => ({\n//   selectedWord,\n//   getTimelineData,\n// });\n\nconst selector = (props: StoreProps) => props.wordData;\n\nexport const Newspaper: React.FC<Props> = ({\n  name2url,\n  name,\n  wc,\n  xScale,\n  ...props\n}) => {\n  // const { selectedWord: word, getTimelineData } = useStore(selector);\n  // // eslint-disable-next-line react-hooks/exhaustive-deps\n  // const data = useMemo(() => getTimelineData(name), [\n  //   getTimelineData,\n  //   name,\n  //   word,\n  // ]);\n\n  const wordData = useStore(selector);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  // const data = useMemo(() => wordData?.get(name), [name, wordData, xScale]);\n  const data = wordData?.get(name);\n\n  return (\n    <div {...props}>\n      {/* {data && xScale !== null && word !== \"\" ? ( */}\n      {data && xScale !== null ? (\n        <LineChart data={data} xScale={xScale} />\n      ) : null}\n      <a\n        className=\"capitalize text-lg font-semibold\"\n        href={name2url?.get(name)}\n        target=\"_black\"\n        rel=\"noopener\"\n      >\n        {name.replace(\"_\", \" \")}\n      </a>\n      <div className=\"my-2\">\n        <WordCount data={wc} />\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useMemo } from \"react\";\nimport { useName2Url } from \"../hooks/useName2Url\";\nimport { StoreProps, useStore } from \"../store\";\nimport { Filter } from \"./Filter\";\nimport { Newspaper } from \"./Newspaper\";\nimport { Spinner } from \"./Spinner\";\nimport { scaleTime, extent } from \"d3\";\nimport { formatDateStr } from \"../utils\";\n\nconst selector = ({\n  activeData,\n  activeDates,\n  setTopK,\n  filters,\n}: StoreProps) => ({\n  activeData,\n  activeDates,\n  setTopK,\n  filters,\n});\ninterface Props {\n  topk: number;\n}\n\nexport const Visualization: React.FC<Props> = ({ topk }) => {\n  const { activeData, activeDates, setTopK, filters } = useStore(selector);\n  const { data: name2url } = useName2Url();\n  const xScale = useMemo(() => { \n    const dates = extent(activeDates.map(formatDateStr));\n    if (!dates[0]) return null;\n    return scaleTime<number>().domain(dates);\n   }, [activeDates]);\n\n  useEffect(() => {\n    setTopK(topk);\n  }, [setTopK, topk]);\n\n  return (\n    <div className=\"mt-2\">\n      {activeData.length === 0 ? (\n        <div className=\"mt-10 flex justify-center\">\n          <Spinner className=\"h-14 w-14\" />\n        </div>\n      ) : (\n        <>\n          <p className=\"font-semibold\">Loaded data: {activeDates.length}</p>\n          <div className=\"flex flex-wrap -ml-1\">\n            {filters.map((word, i) => (\n              <Filter key={i} className=\"ml-1 mt-0.5\" word={word} />\n            ))}\n          </div>\n          <div className=\"mt-4 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 2xl:grid-cols-6 gap-4\">\n            {activeData\n              .sort(([nameA], [nameB]) => nameA.localeCompare(nameB))\n              .map(([name, wc], i) => (\n                <Newspaper\n                  key={i}\n                  className=\"px-4 py-2 bg-blue-50\"\n                  name2url={name2url}\n                  name={name}\n                  wc={wc}\n                  xScale={xScale}\n                />\n              ))}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { DataLoader } from \"./components/DataLoader\";\nimport { Visualization } from \"./components/Visualization\";\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchOnMount: false,\n      refetchOnReconnect: false,\n      refetchOnWindowFocus: false,\n      cacheTime: 60000 * 60, //1h\n    },\n  },\n});\n\nexport const App: React.FC = () => {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <div className=\"m-4\">\n        <DataLoader n={10} loadN={5} />\n        <Visualization topk={10} />\n      </div>\n      <ReactQueryDevtools initialIsOpen />\n    </QueryClientProvider>\n  );\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}